openapi: 3.0.0
info:
  title: Complaint Service API
  description: REST API for managing complaints.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /api/complaints:
    post:
      summary: Add complaint
      description: Creates a new complaint for a product by a reporter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplaintRequest'
      responses:
        '201':
          description: Complaint created successfully.
        '400':
          description: Invalid request data.
    get:
      summary: Get all complaints
      description: Retrieves a paginated list of all complaints.
      parameters:
        - name: page
          in: query
          description: Page number (starting from 1).
          required: false
          schema:
            type: integer
            default: 1
        - name: size
          in: query
          description: Number of items per page.
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: List of complaints retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplaintPageResponse'
  /api/complaints/{id}/content:
    patch:
      summary: Update complaint content
      description: Updates the content of an existing complaint.
      parameters:
        - name: id
          in: path
          description: ID of the complaint to update.
          required: true
          schema:
            type: integer
        - name: newContent
          in: query
          description: New content for the complaint.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Complaint content updated successfully.
        '404':
          description: Complaint not found.
components:
  schemas:
    ComplaintRequest:
      type: object
      properties:
        productId:
          type: string
          description: ID of the product.
        content:
          type: string
          description: Content of the complaint.
        reporter:
          type: string
          description: Reporter of the complaint.
      required:
        - productId
        - content
        - reporter
    ComplaintPageResponse:
      type: object
      properties:
        complaints:
          type: array
          items:
            $ref: '#/components/schemas/ComplaintResponse'
        totalItems:
          type: integer
          description: Total number of complaints.
        totalPages:
          type: integer
          description: Total number of pages.
        currentPage:
          type: integer
          description: Current page number.
    ComplaintResponse:
      type: object
      properties:
        id:
          type: integer
          description: ID of the complaint.
        productId:
          type: string
          description: ID of the product.
        content:
          type: string
          description: Content of the complaint.
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp of the complaint.
        reporter:
          type: string
          description: Reporter of the complaint.
        country:
          type: string
          description: Country of the reporter.
        reportCount:
          type: integer
          description: Number of reports for the complaint.